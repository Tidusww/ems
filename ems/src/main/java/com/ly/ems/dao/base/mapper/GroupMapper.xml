<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ly.ems.dao.base.GroupMapper" >

    <resultMap id="BaseGroupMap" type="com.ly.ems.model.base.group.GroupDTO">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="group_name" property="groupName" jdbcType="VARCHAR" />
        <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
        <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    </resultMap>

    <select id="getGroupById" resultMap="BaseGroupMap">
        SELECT g.*, e.employee_name, e.phone
        FROM ly_group g
        LEFT JOIN ly_employee e on e.id = g.employee_id
        WHERE g.id = #{id, jdbcType=INTEGER}
    </select>

    <select id="getGroupsByConditions" parameterType="com.ly.ems.model.base.group.GroupConditions" resultMap="BaseGroupMap">
        SELECT g.*, e.employee_name, e.phone
        FROM ly_group g
        LEFT JOIN ly_employee e on e.id = g.employee_id
        WHERE 1=1 AND g.status = 1
        <if test="groupName != null and groupName != ''"> AND g.group_name like CONCAT('%', #{groupName, jdbcType=VARCHAR}, '%') </if>
        <if test="employeeName != null and employeeName != ''"> AND e.employee_name like CONCAT('%', #{employeeName, jdbcType=VARCHAR}, '%') </if>
        <if test="phone != null and phone != ''"> AND e.phone = #{phone, jdbcType=VARCHAR} </if>
    </select>

    <insert id="insertGroup" parameterType="com.ly.ems.model.base.group.Group" useGeneratedKeys="true">
        INSERT INTO ly_group
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="groupName != null" >
                group_name,
            </if>
            <if test="employeeId != null" >
                employee_id,
            </if>
            <if test="status != null" >
                status,
            </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides="," >
            <if test="groupName != null" >
                #{groupName},
            </if>
            <if test="employeeId != null" >
                #{employeeId},
            </if>
            <if test="status != null" >
                #{status},
            </if>
        </trim>
    </insert>

    <update id="updateGroup" parameterType="com.ly.ems.model.base.group.Group">
        UPDATE ly_group
        <set >
            <if test="groupName != null" >
                group_name = #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="employeeId != null" >
                employee_id = #{employeeId,jdbcType=INTEGER},
            </if>
            <if test="status != null" >
                status = #{status,javaType=com.ly.ems.model.common.constant.StatusEnum},
            </if>
        </set>
        WHERE id = #{id, jdbcType=INTEGER}
    </update>

    <delete id="updateGroupStatus" >
        UPDATE ly_group
        SET status = #{status,javaType=com.ly.ems.model.common.constant.StatusEnum}
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteGroup" parameterType="java.lang.Integer" >
        DELETE FROM ly_group
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
</mapper>